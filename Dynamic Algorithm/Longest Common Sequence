using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;

public class Program
{



    static List<int> LongestCommonSequence(int[] a, int[] b, int m, int n)
    {

        List<int> l = new List<int>();
        int[,] res = new int[m + 1, n + 1];

        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (a[i] == b[j])
                {
                    res[i + 1, j + 1] = res[i, j] + 1;
                }
                else
                {
                    res[i + 1, j + 1] = Math.Max(res[i, j + 1], res[i + 1, j]);
                }

            }
        }


        while (n > 0 )
        {
            if (res[m, n] > res[m - 1, n] && res[m, n] > res[m, n - 1])
            {
                l.Add(b[n - 1]);
                m--;
                n--;
            }
            else if (res[m, n] == res[m, n - 1])
            {
                n--;
            }
            else
                m--;

        }

        return l ;
    }

    static void Main()
    {
        Console.SetIn(new StreamReader(Console.OpenStandardInput(),
                               Console.InputEncoding,
                              false,
                              bufferSize: 99999999));

        int[] x = Ria();
        int[] a = Ria();
        int[] b = Ria();

        List<int> l = LongestCommonSequence(a, b, x[0], x[1]);
        l.Reverse();
        Console.Write(string.Join(" ", l).Trim());

    }


    static string Rs()
    {
        return Console.ReadLine().Trim();
    }
    static string[] Rsa()
    {
        return Console.ReadLine().Trim().Split(' ');
    }
    static int Ri()
    {
        return ConvertToInt(Rs());
    }
    public static int[] Ria(int n)
    {
        int[] num = new int[n];
        string[] s = Rsa();
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int[] Ria()
    {

        string[] s = Rsa();
        int n = s.Length;
        int[] num = new int[n];
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int ConvertToInt(string s)
    {
        int y = 0;
        foreach (char c in s)
        {
            y = y * 10 + (c - '0');
        }
        return y;
    }
}
