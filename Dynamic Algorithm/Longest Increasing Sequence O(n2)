#define a
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;

public class Program
{


    static void Main()
    {
        int max = int.MinValue;
        int n = Ri();
        int[] arr = new int[n];
        
        for(int i=0;i<n;i++)
        {
            arr[i] = Ri();
        }
        int[] s = new int[n];
        
        for(int i=0;i<n;i++)
        {
            s[i] = 1;
        }
        for(int i=0;i<n;i++)
        {
            for(int j=i-1;j>=0;j--)
            {
                 if(arr[i]>arr[j])
                 {
                     if (s[i] <= s[j])
                         s[i] = s[j] + 1;

                 }
            }
            if (max < s[i])
                max = s[i];
        }


        Console.WriteLine(max);


    }


    static string Rs()
    {
        return Console.ReadLine().Trim();
    }
    static string[] Rsa()
    {
        return Console.ReadLine().Trim().Split(' ');
    }
    static int Ri()
    {
        return ConvertToInt(Rs());
    }
    static long Rl()
    {
        return ConvertToLong(Rs());
    }
    public static int[] Ria(int n)
    {
        int[] num = new int[n];
        string[] s = Rsa();
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int[] Ria()
    {

        string[] s = Rsa();
        int n = s.Length;
        int[] num = new int[n];
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int ConvertToInt(string s)
    {
        int y = 0;
        foreach (char c in s)
        {
            y = y * 10 + (c - '0');
        }
        return y;
    }
    public static long ConvertToLong(string s)
    {
        long y = 0;
        foreach (char c in s)
        {
            y = y * 10 + (c - '0');
        }
        return y;
    }
}
