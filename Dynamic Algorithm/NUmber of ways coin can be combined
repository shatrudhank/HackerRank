using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;

public class Program
{


    static long NumberOfWays(int[] arr, int n, int m)
    {

        long[] t = new long[m + 1];
        t[0] = 1;
     
        for (int i = 0; i < n; i++)
        {
           
            for (int j = 1; j <=m; j++)
            {
              
                if(j>=arr[i])
                {
                    t[j]= t[j-arr[i]]+t[j];
                }
            }
         
        }


        return t[m];
    }

    static void Main()
    {
        //Console.SetIn(new StreamReader(Console.OpenStandardInput(),
        //                       Console.InputEncoding,
        //                       false,
        //                       bufferSize: 99999999));

        int[] x = Ria();
        int m = x[0];
        int n = x[1];
        int[] a = Ria();

        Console.WriteLine(NumberOfWays(a, n, m));


    }


    static string Rs()
    {
        return Console.ReadLine().Trim();
    }
    static string[] Rsa()
    {
        return Console.ReadLine().Trim().Split(' ');
    }
    static int Ri()
    {
        return ConvertToInt(Rs());
    }
    public static int[] Ria(int n)
    {
        int[] num = new int[n];
        string[] s = Rsa();
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int[] Ria()
    {

        string[] s = Rsa();
        int n = s.Length;
        int[] num = new int[n];
        for (int i = 0; i < n; i++)
        {
            num[i] = ConvertToInt(s[i]);
        }
        return num;
    }
    public static int ConvertToInt(string s)
    {
        int y = 0;
        foreach (char c in s)
        {
            y = y * 10 + (c - '0');
        }
        return y;
    }
}
